;; Music vars
(defpoll SONG :interval "1s" `scripts/music.sh --song`)
(defpoll ARTIST :interval "1s" `scripts/music.sh --artist`)
(defpoll STATUS :interval "1s" `scripts/music.sh --status`)
(defpoll COVER :interval "1s" `scripts/music.sh --cover`)

(defwindow music
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "0px"
                               :width "516px"
                               :height "144px"
                               :anchor "top center")
           :stacking "overlay"
  (music-player))

(defwidget music-player []
	(box :class "genwin" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false"
		(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
		(box :orientation "v" :spacing 4 :space-evenly "false" :vexpand "false" :hexpand "true"
			(label :halign "center" :valign "center" :class "song" :wrap "true" :justify "center" :lines 1 :truncate "true" :text SONG)
			(label :halign "center" :valign "center" :class "artist" :wrap "true" :justify "center" :lines 1 :truncate "true" :text ARTIST)
			(box :orientation "h" :spacing 4 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false"
				(button :class "btn_prev" :onclick "scripts/music.sh --prev" "󰒮")
				(button :class "btn_play" :onclick "scripts/music.sh --toggle" STATUS)
				(button :class "btn_next" :onclick "scripts/music.sh --next" "󰒭"))
			(box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false"))))
